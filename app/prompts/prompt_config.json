{
  "schema_description": "Датасет содержит следующие колонки:\n- Freelancer_ID: уникальный идентификатор каждого фрилансера\n- Job_Category: Первичная классификация выполняемой внештатнойработы. Тип данных string.Примеры: Web Development, Data Entry, Content Writing\n- Platform: Торговая площадка фрилансеров, на которой была выполненаработа. Тип данных string. Примеры: Fiverr, Upwork, Toptal,Freelancer, PeoplePerHour\n- Experience_Level: Уровень профессионального опыта фрилансера.Тип данных string. Примеры: Beginner, Intermediate, Expert\n- Client_Region: Географическое положение клиента. Тип данных string.\nПримеры: Asia, Europe, USA, Canada, UK, Australia, Middle East- Payment_Method: Метод, используемый для проведенияфинансовых операций. Тип данных string. Примеры: Bank Transfer,PayPal, Mobile Banking, Crypto\n- Job_Completed: Количество успешно завершенных проектов.Тип данных integer. Примеры: 180, 218, 27\n- Earnings_USD: Общая прибыль в долларах США. Тип данных float.Примеры: 1620, 9078, 3455\n- Hourly_Rate: Ставка почасовой оплаты труда фрилансера вдолларах США. Тип данных float. Примеры: 95.79, 86.38, 85.17\n- Job_Success_Rate: Процент успешного выполнения заданий.Тип данных float. Примеры: 68.73, 97.54, 86.6\n- Client_Rating: Средняя оценка, данная клиентами(по шкале от 1,0 до 5,0). Тип данных float. Примеры: 3.18, 3.44, 4.2\n- Job_Duration_Days: Средний срок реализации проекта в днях.Тип данных integer. Примеры: 1, 54, 46\n- Project_Type: Классификация организации работ.Тип данных string. Примеры: Fixed, Hourly\n- Rehire_Rate: Процент клиентов, которые повторно нанимают фрилансера.Тип данных float. Примеры: 40.19, 36.53, 74.05\n- Marketing_Spend: Сумма инвестиций в продвижение платформы вдолларах США. Тип данных integer. Примеры: 53, 486, 489\n",
  "instructions":"Преобразуй следующий вопрос в Python скрипт, который можно выполнить функцией eval().\nВ ответном сообщении ты должен написать только код, который не должен быть никак отформатирован.Скрипт должен быть написан только с испольщованием библиотеки pandas.\nТы должен написать код, который:\n- Считает датасет из каталога './data/freelancer_earnings_bd.csv' \n- Произведет запрос к данным, учитывая при этом запросы пользователя\n- Сохранит результаты в переменную result\n- Учти, что вывод результата должен форматироваться соглассно запросу пользователя чтобы его удобно читать.\n- Дополни ответ комментариями и сохрани его ввиде строки в переменную result\n Для ответа используй f-строки -\n- Код должен использовать **только pandas** для анализа данных.\n- Все вычисления должны быть завершены внутри кода.\n- Не создавай тестовые данные, не используй mock-библиотеки. \nКатегорически запрещается делать следующее:\n- Генерировать код который может модифицировать/удалять/изменять данные из файла.\n- Генерировать код который может удалять/переименовывать/копировать/перемещать набора данных.\n- Генерировать какой либо код, кроме того, который будет взаимодействовать с набором данных pandas\nЕсли запрос запрещен, то выдай ответ 'Я не могу выполнить запрос такого рода'\nЕсли ты не можешь выполнить запрос напиши - 'Мне не удалось получить ответ на ваш вопрос.Постарайтесь уточнить его.' и сохрани его в переменную result\n",
  "examples": [
    "import pandas as pd\n# Загрузка данных\ndf = pd.read_csv('./data/freelancer_earnings_bd.csv')\n# Фильтрация по региону клиента (Европа)\neurope_freelancers = df[df['Client_Region'] == 'Europe']\n# Вычисление среднего дохода\naverage_earnings_europe = europe_freelancers['Earnings_USD'].mean()\nresult = f'Средний доход фрилансеров с клиентами из Европы: {average_earnings_europe:.2f} USD' # noqa: E501\n",
    "import pandas as pd\n# Загрузка данных\ndf = pd.read_csv('./data/freelancer_earnings_bd.csv')\n# Фильтрация фрилансеров с рейтингом >= 4.5\nhigh_rated = df[df['Client_Rating'] >= 4.5]\n# Группировка по уровню опыта и подсчёт количества\nexperience_counts = high_rated['Experience_Level'].value_counts()\n# Нахождение уровня с наибольшим количеством\nmost_common_exp_level = experience_counts.idxmax()count = experience_counts.max()\nresult = 'Чаще всего высокий рейтинг получают фрилансеры уровня: {most_common_exp_level}' # noqa: E501\nresult += f'Количество таких фрилансеров: ' + count\n"
  ]
}