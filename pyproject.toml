[tool.poetry]
name = "Freelance analyzer"
version = "0.1.0"
description = ""
authors = ["betepok506 "]
package-mode = false

[tool.black]
line-length = 79
target-version = [ "py310", "py311" ]
exclude = "((.eggs | .git | .pytest_cache | build | dist))"

[tool.ruff]
line-length = 79
exclude = [".git", "__pycache__", ".mypy_cache", ".pytest_cache"]

[tool]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    # "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "B904",
    "B006",    
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = ["alembic", "__pycache__"]

[tool.poetry.dependencies]
python = "^3.10"
openai = "*"
pandas = "*"
pydantic_settings = "*"
jsonlines = "*"


[tool.poetry.group.dev.dependencies]
coverage = "^7.6.10"
flake8 = "^7.1.1"
black = "^24.10.0"
isort = "^5.13.2"
pytest-cov = "^6.0.0"
pydocstyle = "^6.3.0"
mypy = "^1.14.1"
gitchangelog = "^3.0.4"
mkdocs = ">=1.6.1"
mkdocs-material = "*"
Sphinx = ">=8.1.3"
sphinx-rtd-theme = "^3.0.0"
numpydoc = "^1.8.0"

[tool.poetry.group.test.dependencies]
black = "^24.10.0"
ruff = "^0.0.256"
pytest = "^7.4.0"
pytest-cov = "*"
coverage = "*"
pytest-asyncio = "^0.21.1"
mypy = "^1.5.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"